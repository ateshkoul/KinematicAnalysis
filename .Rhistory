reshape(k,varying = c("PC1","PC2"),v.names = "targets",idvar = "sub",direction = "long")
reshape(k,varying = c("PC1","PC2"),timevar = "targets",idvar = "sub",direction = "long")
k$PC1
k$PC2
reshape(k,varying = c("PC1","PC2"),timevar = "targets",idvar = "sub",direction = "long",times=c("PC1","PC2"))
k
reshape(k,varying = list(1:2),timevar = "targets",idvar = "sub",direction = "long",times=c("PC1","PC2"))
reshape(k,varying = list(1:2),timevar = "targets",idvar = c("sub","targets"),direction = "long",times=c("PC1","PC2"))
reshape(k,varying = list(1:2),timevar = "targets",idvar = c("sub","targets"),direction = "long")
reshape(k,varying = "PC1",timevar = "targets",idvar = c("sub","targets"),direction = "long")
library(KinematicAnalysis)
help(multiplot)
p
p2 <- ggplot(k,aes(x=sub,y=PC2,fill=factor(targets)))+geom_bar(stat = "identity",position="dodge")
multiplot(p,p2,layout = mmatrix(c(1,2),nrow=2,byrow=TRUE))
multiplot(p,p2,layout = matrix(c(1,2),nrow=2,byrow=TRUE))
k
k$PC2 <- NULL
k
Data <- k
for(i in 1:20){
model <- svm(factor(targets) ~ .,data=Data[!Data$sub==i,-which(colnames(Data)=="sub")],kernel = "linear",scale=F,cost=c_range[j])
fitted <- predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
confu <- rbind(confu,fitted)
acc[i] <- sum(1 * (fitted==Data[Data$sub==i,"targets"]))/length(fitted)
}
c_range <- seq(0.001,1,by=0.01)
for(j in 1:length(c_range)){
confu <- matrix(rep(NA,2),1,2)
acc <- rep(NA,20)
for(i in 1:20){
model <- svm(factor(targets) ~ .,data=Data[!Data$sub==i,-which(colnames(Data)=="sub")],kernel = "linear",scale=F,cost=c_range[j])
fitted <- predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
confu <- rbind(confu,fitted)
acc[i] <- sum(1 * (fitted==Data[Data$sub==i,"targets"]))/length(fitted)
}
print(c_range[j])
print(mean(acc))
ACC[j] <- mean(acc)
print(paste0('Best Acc = ',max(ACC,na.rm=T)))
confu <- confu[-1,]
actual <- t(matrix(rep(c(1,2),length.out=40),2,20))
print(table(confu,actual))
}
Data
confu
model
fitted
fitted <- predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
names(Data)
names(Data)[1] <- "x"
names(Data)
for(j in 1:length(c_range)){
confu <- matrix(rep(NA,2),1,2)
acc <- rep(NA,20)
for(i in 1:20){
model <- svm(factor(targets) ~ .,data=Data[!Data$sub==i,-which(colnames(Data)=="sub")],kernel = "linear",scale=F,cost=c_range[j])
fitted <- predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
confu <- rbind(confu,fitted)
acc[i] <- sum(1 * (fitted==Data[Data$sub==i,"targets"]))/length(fitted)
}
print(c_range[j])
print(mean(acc))
ACC[j] <- mean(acc)
print(paste0('Best Acc = ',max(ACC,na.rm=T)))
confu <- confu[-1,]
actual <- t(matrix(rep(c(1,2),length.out=40),2,20))
print(table(confu,actual))
}
predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))]
model
predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
k <- data.frame(s$x[,1:2],sub=Data$sub,targets=Data$targets)
k
for(j in 1:length(c_range)){
confu <- matrix(rep(NA,2),1,2)
acc <- rep(NA,20)
for(i in 1:20){
model <- svm(factor(targets) ~ .,data=Data[!Data$sub==i,-which(colnames(Data)=="sub")],kernel = "linear",scale=F,cost=c_range[j])
fitted <- predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
confu <- rbind(confu,fitted)
acc[i] <- sum(1 * (fitted==Data[Data$sub==i,"targets"]))/length(fitted)
}
print(c_range[j])
print(mean(acc))
ACC[j] <- mean(acc)
print(paste0('Best Acc = ',max(ACC,na.rm=T)))
confu <- confu[-1,]
actual <- t(matrix(rep(c(1,2),length.out=40),2,20))
print(table(confu,actual))
}
Data <- k
for(j in 1:length(c_range)){
confu <- matrix(rep(NA,2),1,2)
acc <- rep(NA,20)
for(i in 1:20){
model <- svm(factor(targets) ~ .,data=Data[!Data$sub==i,-which(colnames(Data)=="sub")],kernel = "linear",scale=F,cost=c_range[j])
fitted <- predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
confu <- rbind(confu,fitted)
acc[i] <- sum(1 * (fitted==Data[Data$sub==i,"targets"]))/length(fitted)
}
print(c_range[j])
print(mean(acc))
ACC[j] <- mean(acc)
print(paste0('Best Acc = ',max(ACC,na.rm=T)))
confu <- confu[-1,]
actual <- t(matrix(rep(c(1,2),length.out=40),2,20))
print(table(confu,actual))
}
ACC <- rep(NA,1)
c_range <- seq(0.001,1,by=0.01)
for(j in 1:length(c_range)){
confu <- matrix(rep(NA,2),1,2)
acc <- rep(NA,20)
for(i in 1:20){
model <- svm(factor(targets) ~ .,data=Data[!Data$sub==i,-which(colnames(Data)=="sub")],kernel = "linear",scale=F,cost=c_range[j])
fitted <- predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
confu <- rbind(confu,fitted)
acc[i] <- sum(1 * (fitted==Data[Data$sub==i,"targets"]))/length(fitted)
}
print(c_range[j])
print(mean(acc))
ACC[j] <- mean(acc)
print(paste0('Best Acc = ',max(ACC,na.rm=T)))
confu <- confu[-1,]
actual <- t(matrix(rep(c(1,2),length.out=40),2,20))
print(table(confu,actual))
}
paste0('r',1:20)
paste0('r',1:30)
paste0('r',"&",1:30)
paste0('r',1:30,' & ')
paste0('r',1:30,' & ',collapse = '')
paste0('r',1:30,' + ',collapse = '')
Data <- read.csv(file.choose(),header=T)
Data <- Data[,-1]
head(Data)
order(Data$X0)
Data$X0
order(Data$X0)
Data$X0[order(Data$X0)]
Data[1,order(Data[1,])]
max(Data[1,order(Data[1,])])
Data[1,order(Data[1,])][1]
Data[2,order(Data[2,])]
Data[2,order(Data[2,])][1]
Data[3,order(Data[3,])][1]
View(Data[,1:10])
max(Data)
dim(DData
dim(Data)
9*20
Data <- data.frame(Data,sub=rep(1:20,each=9),targets=rep(c(1,2,3),times=60))
View(Data)
View(Data[,3793])
View(Data[,c(3793,3794)])
Dat <- Data[!Data$targets==3,]
dim(Dat)
max(Dat)
help(max)
min(Dat)
max(Dat)
max(Dat[Dat$sub==1,])
Dat[Dat$sub==1,]
min(Dat[Dat$sub==1,])
max(Dat[Dat$sub==1,])
write.csv(Dat,file = 'del.csv')
getwd()
write.csv(Data,file = 'del.csv')
Data <- read.csv(file.choose(),header=T)
Data <- Data[,-1]
rm(list=ls())
Data <- read.delim("clipboard",header=T)
head(Data)
library(plyr)
ddply(Data,.(cond),summarise,val = mean(DataIPl))
Data <- read.delim("clipboard",header=F)
head(Data)
s <- prcomp(Data,scale. = TRUE,center = TRUE)
s$x
s$x[,1]
s$x
dim(s$x)
dim(s$x[,1])
head(s$x)
head(s$x$PC1)
help(prcomp)
Data <- read.delim("clipboard",header=F)
head(Data)
Data$type <- rep(c("Drink","Pour"),each=20)
head(Data)
p <- ggplot(Data,aes(x=type,y=V1,fill=type))
p+ geom_bar(stat = "identity",position = "dodge")
Data$sub <- rep(1:20,times=2)
p <- ggplot(Data,aes(x=sub,y=V1,fill=type))
p+ geom_bar(stat = "identity",position = "dodge")
ddply(Data,.(type),summarise,a = mean(V1))
t.test(V1~type,data=DData
t.test(V1~type,data=Data)
Data <- read.delim("clipboard",header=F)
Data$sub <- rep(1:20,times=2)
Data$type <- rep(c("Drink","Pour"),each=20)
t.test(V1~type,data=Data)
p <- ggplot(Data,aes(x=sub,y=V1,fill=type))
p+ geom_bar(stat = "identity",position = "dodge")
Data
Data <- read.delim("clipboard",header=F)
Data$type <- rep(c("Drink","Pour"),each=20)
Data$sub <- rep(1:20,times=2)
p <- ggplot(Data,aes(x=sub,y=V1,fill=type))
p+ geom_bar(stat = "identity",position = "dodge")
ddply(Data,.(type),summarise,a = mean(V1))
Data <- read.csv(file.choose(),header=T)
Data <- Data[,-1]
dim(Data)
Data <- read.csv(file.choose(),header=T)
Data <- Data[,-1]
dim(Data)
colSums(Data)
sum(colSums(Data)==0)
Data <- read.delim("clipboard",header=F)
head(Data)
Data$sub <- rep(1:20,times=2)
Data$type <- rep(c("Drink","Pour"),each=20)
p <- ggplot(Data,aes(x=sub,y=V1,fill=type))
p+ geom_bar(stat = "identity",position = "dodge")
library(e1071)
Data <- read.csv(file.choose(),header=T)
Data <- Data[,-1]
Data <- data.frame(Data,sub=rep(1:20,each=2),targets = rep(c(1,2),times=20))
#k = sample(1:20,20,replace = F)
ACC <- rep(NA,1)
c_range <- seq(0.001,1,by=0.01)
for(j in 1:length(c_range)){
confu <- matrix(rep(NA,2),1,2)
acc <- rep(NA,20)
for(i in 1:20){
model <- svm(factor(targets) ~ .,data=Data[!Data$sub==i,-which(colnames(Data)=="sub")],kernel = "linear",scale=F,cost=c_range[j])
fitted <- predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
confu <- rbind(confu,fitted)
acc[i] <- sum(1 * (fitted==Data[Data$sub==i,"targets"]))/length(fitted)
}
print(c_range[j])
print(mean(acc))
ACC[j] <- mean(acc)
print(paste0('Best Acc = ',max(ACC,na.rm=T)))
confu <- confu[-1,]
actual <- t(matrix(rep(c(1,2),length.out=40),2,20))
print(table(confu,actual))
}
ACC <- rep(NA,1)
c_range <- seq(0.0001,1,by=0.01)
for(j in 1:length(c_range)){
confu <- matrix(rep(NA,2),1,2)
acc <- rep(NA,20)
for(i in 1:20){
model <- svm(factor(targets) ~ .,data=Data[!Data$sub==i,-which(colnames(Data)=="sub")],kernel = "linear",scale=F,cost=c_range[j])
fitted <- predict(model,Data[Data$sub==i,-c(which(colnames(Data)=="targets"),which(colnames(Data)=="sub"))],decision.values = F)
confu <- rbind(confu,fitted)
acc[i] <- sum(1 * (fitted==Data[Data$sub==i,"targets"]))/length(fitted)
}
print(c_range[j])
print(mean(acc))
ACC[j] <- mean(acc)
print(paste0('Best Acc = ',max(ACC,na.rm=T)))
confu <- confu[-1,]
actual <- t(matrix(rep(c(1,2),length.out=40),2,20))
print(table(confu,actual))
}
warnings()
Data <- read.delim("clipboard",header=F)
Data$type <- rep(c("Drink","Pour"),each=20)
Data$sub <- rep(1:20,times=2)
p <- ggplot(Data,aes(x=sub,y=V1,fill=type))
p+ geom_bar(stat = "identity",position = "dodge")
Data <- read.csv(file.choose(),header=T)
Data <- Data[,-1]
Data <- data.frame(Data,sub=rep(1:20,each=2),targets = rep(c(1,2),times=20))
matplot(Data[Data$targets==1,],type='l')
head(Data)
matplot(Data[Data$targets==1,-189)],type='l')
matplot(Data[Data$targets==1,-189],type='l')
matplot(Data[Data$targets==1,-C(189,190)],type='l')
matplot(Data[Data$targets==1,-c(189,190)],type='l')
matplot(Data[Data$targets==2,-c(189,190)],type='l')
dim(Data)
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv)
nba <- read.csv("http://datasets.flowingdata.com/ppg2008.csv")
nba$Name <- with(nba, reorder(Name, PTS))
nba$Name
nba
nba.m
nba.m <- melt(nba)
> nba.m <- ddply(nba.m, .(variable), transform,
+     rescale = rescale(value))
nba.m <- melt(nba)
library(reshape2)
nba.m <- melt(nba)
nba.m <- ddply(nba.m, .(variable), transform,
+     rescale = rescale(value))
nba.m <- ddply(nba.m, .(variable), transform,rescale = rescale(value))
nba.m <- ddply(nba.m, .(variable), transform,rescale = scale(value))
nba.m
Data
k = melt(Data)
k
help("melt")
nba.m <- melt(nba)
Data$sub <- factor(Data$sub)
k = melt(Data)
k
Data$targets <- factor(Data$targets)
k = melt(Data)
k
names(k)
p <- ggplot(k, aes(sub, variable)) + geom_tile(aes(fill = value),colour = "white") + scale_fill_gradient(low = "white",high = "steelblue")
p
Data
max(Data)
max(Data[,1:188])
p <- ggplot(k, aes(sub, variable)) + geom_tile(aes(fill = value),colour = "white") + scale_fill_gradient(low = "white",high = "red")
p
p <- ggplot(k, aes(sub, variable)) + geom_tile(aes(fill = value),colour = "white") + scale_fill_gradient(low = "white",high = "red")
p + facet_grid(. ~ targets)
p <- ggplot(k, aes(sub, variable)) + geom_tile(aes(fill = value),colour = "white") + scale_fill_gradient(low = "blue",high = "red")
p + facet_grid(. ~ targets)
p <- ggplot(k, aes(sub, variable)) + geom_tile(aes(fill = value),colour = "white") + scale_fill_gradient(low = "white",high = "red")
p + facet_grid(. ~ targets)
p <- ggplot(k, aes(variable,sub)) + geom_tile(aes(fill = value),colour = "white") + scale_fill_gradient(low = "white",high = "red")
p + facet_grid(. ~ targets)
install.packages("R.matlab")
library(R.matlab)
Data <- readMat(file.choose())
DataIFG <- Data$Y
DataIFG$intention <- "Drink"
DataIFG
Data$Y
rm(DataIFG)
DataIFG <- Data$Y
DataIFG
DataIFG[,"intention"] <- "Drink"
DataIFG <- as.data.frame(Data$Y)
DataIFG[,"intention"] <- "Drink"
Data <- as.data.frame(readMat(file.choose())$Y)
DataIFG
DataIFG$V1
length(DataIFG$V1)
DataIFG$V1[21:40] <- Data
help(rbind)
rbind(DataIFG,Data)
DataIFG
Data$intention <- "Pour"
cbind(DataIFG,Data)
DataIFG <- DataIFG[,-c(3,4)]
rbind(DataIFG,Data)
DataIFG <- rbind(DataIFG,Data)
DataIFG$sub <- rep(1:20,times=2)
p <- ggplot(DataIFG,aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")
install.packages('plotly')
install.packages("plotly")
library(plotly)
ggplotly(p)
p
p <- ggplot(DataIFG,aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")
p
p <- ggplot(DataIFG,aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")
library(ggplot2)
p <- ggplot(DataIFG,aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")
p <- ggplot(DataIFG,aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")
p
rm(Data)
Data <- DataIFG
Data$region <- "IFG"
library(R.matlab)
DataVisual <- as.data.frame(readMat(file.choose())$Y)
DataVisual$intention <- "Drink"
DDataVisual$sub <- rep(1:20,times=2)
DataVisual$sub <- rep(1:20,times=2)
Data2 <- as.data.frame(readMat(file.choose())$Y)
Data2$intention <- "Pour"
DataVisual <- rbind(DataVisual,Data2)
DataVisual <- rep(1:20,times=2)
DataVisual$region <- "Visual"
DataVisual
DataVisual <- as.data.frame(readMat(file.choose())$Y)
DataVisual$intention <- "Drink"
DataVisual <- as.data.frame(readMat(file.choose())$Y)
DataVisual$intention <- "Drink"
DataVisual <- as.data.frame(readMat(file.choose())$Y)
DataVisual$intention <- "Pour"
Data <- as.data.frame(rbind(Data,DataVisual))
Data
DataVisual
DataVisual <- as.data.frame(readMat(file.choose())$Y)
DataVisual$intention <- "Drink"
DataVisualDrink <- as.data.frame(readMat(file.choose())$Y)
DataVisualDrink$intention <- "Drink"
DataVisualPour <- as.data.frame(readMat(file.choose())$Y)
DataVisualPour$intention <- "Pour"
DataVisual <- rbind(DataVisualDrink,DataVisualPour)
DataVisual
DataVisual$sub <- rep(1:20,times=2)
DataVisual
DataVisual$region <- "Visual"
Data
rbind(Data,DataVisual)
Data <- rbind(Data,DataVisual)
View(Data)
p <- ggplot(Data,aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")
p + facet_grid(.~region)
help(facet)
library(KinematicAnalysis)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-1,7.5)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-1,7.5)
multiplot(p1,p2)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-2,7.5)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-2,7.5)
multiplot(p1,p2)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-3,7.5)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-3,7.5)
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-4,7.5)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-4,7.5)
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-7,7.5)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+xlim(1,20)+ylim(-7,7.5)
multiplot(p1,p2)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+xlim(1,20)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+xlim(1,20)
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)
multiplot(p1,p2)
DataVisualDrink <- as.data.frame(readMat(file.choose())$Y)
DataVisualDrink$intention <- "Drink"
DataVisualPour <- as.data.frame(readMat(file.choose())$Y)
DataVisualPour$intention <- "Pour"
DataVisual <- rbind(DataVisualDrink,DataVisualPour)
DataIFGDrink <- as.data.frame(readMat(file.choose())$Y)
DataIFGDrink$intention <- "Drink"
DataIFGPour <- as.data.frame(readMat(file.choose())$Y)
DataIFGPour$intention <- "Pour"
DataIFG <- rbind(DataIFGDrink,DataIFGPour)
Data <- as.data.frame(rbind(DataIFG,DataVisual))
Data
DataVisual$region <- "Visual"
DataIFG$region <- "IFG"
Data <- as.data.frame(rbind(DataIFG,DataVisual))
Data$sub <- rep(1:20,times=4)
Data$sub
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+xlim(1,20)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+xlim(1,20)
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+xlim(0.5,20.5)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+xlim(0.5,20.5)
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+xlim(0.5,20.5)+ylim(-2,7.5)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+xlim(0.5,20.5)+ylim(-2,7.5)
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+ylim(-2,7.5)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+ylim(-2,7.5)
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)
multiplot(p1,p2)
p1 <- ggplot(Data[Data$region=="IFG",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge")+ggtitle("IFG")+theme_bw(base_size = 18)+ylim(-2,9.5)
p2 <- ggplot(Data[Data$region=="Visual",],aes(sub,V1,fill=intention))+geom_bar(stat = "identity",position= "dodge") + ggtitle("Visual")+theme_bw(base_size = 18)+ylim(-2,9.5)
multiplot(p1,p2)
library(plotly)
multiplot(p1,p2)
DataVisual
reshape(Data,v.na)
reshape(Data,v.names = "V1",timevar = "intention",direction = "wide")
reshape(DataVisual,v.names = "V1",timevar = "intention",direction = "wide")
Data
reshape(Data,v.names = "V1",timevar = c("region","intention"),idvar = "sub")
reshape(Data,v.names = "V1",timevar = c("region","intention"),idvar = "sub",direction = "wide")
reshape(Data,v.names = "V1",timevar = "region",idvar = "sub",direction = "wide")
reshape(Data,v.names = "V1",timevar = "intention",idvar = c("sub","region"),direction = "wide")
k <- reshape(Data,v.names = "V1",timevar = "intention",idvar = c("sub","region"),direction = "wide")
library(plyr)
ddply(k,.(sub,region),summarise,diff =  V1.Drink- V1.Pour)
s <- ddply(k,.(sub,region),summarise,diff =  V1.Drink- V1.Pour)
s[order(s$sub,s$region)]
s[order(s$sub,s$region),]
s[order(s$region),]
library(openxlsx)
wb <- createWorkbook("welma")
addWorksheet(wb,"Raw_Data")
writeData(wb,"Raw_Data",Data)
addWorksheet(wb,"Raw_Data_wide")
writeData(wb,"Raw_Data_wide",k)
addWorksheet(wb,"Diff")
writeData(wb,"Diff",s)
directory = choose.dir()
directory
saveWorkbook(wb,file = paste0(directory,"\","IFG_IPL_diff.xlsx"))
saveWorkbook(wb,file = paste0(directory,"IFG_IPL_diff.xlsx"))
paste0(directory,"IFG_IPL_diff.xlsx")
D <- read.delim("clipboard",header=F)
cor.test(D$V1,D$V2)
